栈和队列是两种重要的线性结构：
	1>从数据结构的角度看，栈和队列也是线性表，特殊性在于栈和队列的基本操作是线性表操作的子集，它们是操作受限的线性表，因此，可称为限定性的数据结构；
	2>从数据类型的角度看，它们是和线性表大不相同的两类重要的抽象数据类型；
栈（堆栈）：限定仅在表尾进行插入或删除操作的线性表；
	1>具有一定操作约束的线性表；
	2>只在一端（栈顶，Top）做插入、删除；
	3>对栈来说，表尾端有其特殊含义，称为栈顶（top）；表头端称为栈底（bottom）；
	4>栈称为后进先出（last in first out)线性表(简称LIFO结构）；
顺序栈：栈的顺序存储结构是利用一组地址连续的存储单元依次存放自栈底到栈顶的数据元素，同时附设指针top指示栈顶元素在顺序栈中的位置。
	1>栈的顺序存储结构通常由一个一维数组和一个记录栈顶元素位置的变量组成；
栈的链式存储结构实际上就是一个单链表，叫做链栈；插入和删除操作只能够在链栈的栈顶进行；
队列（queue）：具有一定操作约束的线性表（先进先出，first in first out ,FIFO）；
	1>只允许在表的一端进行插入元素，而在另一端进行删除元素；
	2>允许插入的一端叫做队尾（rear），允许删除的一端叫做对头（front）；
双端队列（deque）：限定性数据结构；
	1>限定插入和删除操作在表的两端进行的线性表；
	2>两端分别叫做端点1和端点2；
	3>可以有输出受限的双端队列和输入受限的双端队列；
链队列：用链表表示队列；
	1>一个链队列需要两个分别指示队头和队尾的指针（头指针，尾指针）才能惟一确定；
	2>为了方便操作，给链队列添加一个头结点，并令头指针指向头结点；
	3>空队列判决条件为头指针和尾指针均指向头结点；
	4>插入和删除操作分别在链表的两头进行，插入链表尾，删除链表头，删除不能再链表尾进行；
队列的顺序存储结构通常由一个一维数组和一个记录队列头元素位置的变量front以及一个记录队列尾元素位置的变量rear组成；
	1>初始化建空队列时，令front=rear=0，每当插入新的队尾元素时“尾指针增1”，每当删除队列头元素时“头指针增1”；
	2>在非空队列中，头指针始终指向队列头元素，而尾指针始终指向队列尾元素的下一个位置；
循环队列：front = rear 无法判断队列是“空”还是“满”；
	1>另设一个标志位以区别队列是“空”还是“满”；
	2>少用一个元素空间，约定“队列头指针在队列尾指针的下一个位置”为“满”的标志；
